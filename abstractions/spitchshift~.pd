#N canvas 439 333 800 339 10;
#N canvas 260 25 531 738 phase-tables 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-prev-imag 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1 0 0;
#X restore 67 395 graph;
#N canvas 0 25 450 300 (subpatch) 0;
#X array \$0-prev-real 4096 float 0;
#X coords 0 500 4096 -500 400 300 1 0 0;
#X restore 67 40 graph;
#X restore 51 157 pd phase-tables;
#N canvas 385 188 595 536 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 2048 float 0;
#X coords 0 1 2047 0 300 100 1;
#X restore 148 395 graph;
#X obj 365 185 osc~;
#X obj 365 210 *~ -0.5;
#X obj 365 234 +~ 0.5;
#X obj 348 277 tabwrite~ \$0-hann;
#X obj 195 238 /;
#X obj 213 206 samplerate~;
#X obj 105 252 swap;
#X obj 105 276 /;
#X obj 206 266 * 1000;
#X obj 124 149 t f b f;
#X msg 213 156 resize \$1;
#X obj 213 180 s \$0-hann;
#X msg 390 155 0;
#X obj 317 151 t f b;
#X text 94 21 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec)., f 56
;
#X obj 124 114 r \$0-window-size;
#X obj 105 300 s \$0-window-hz;
#X obj 317 123 r \$0-window-hz;
#X obj 206 293 s \$0-window-msec;
#X obj 195 316 s \$0-window-sec;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 9 0;
#X connect 5 0 20 0;
#X connect 6 0 5 1;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 17 0;
#X connect 9 0 19 0;
#X connect 10 0 5 0;
#X connect 10 0 7 0;
#X connect 10 1 6 0;
#X connect 10 2 11 0;
#X connect 11 0 12 0;
#X connect 13 0 1 1;
#X connect 14 0 1 0;
#X connect 14 1 4 0;
#X connect 14 1 13 0;
#X connect 16 0 10 0;
#X connect 18 0 14 0;
#X restore 51 181 pd hann-window;
#N canvas 471 44 688 708 fft-transpose 0;
#X obj 56 486 *~;
#X obj 23 486 *~;
#X obj 23 508 -~;
#X obj 172 484 *~;
#X obj 141 484 *~;
#X obj 141 506 +~;
#X obj 114 202 *~;
#X obj 83 202 *~;
#X obj 55 202 *~;
#X obj 24 202 *~;
#X obj 24 227 +~;
#X obj 128 394 *~;
#X obj 24 631 *~;
#X obj 239 439 rfft~;
#X obj 123 170 rfft~;
#X obj 23 573 rifft~;
#X obj 25 655 outlet~;
#X obj 98 394 *~;
#X obj 98 416 +~;
#X obj 129 227 -~;
#X obj 23 440 *~;
#X obj 56 441 *~;
#X obj 370 652 block~;
#X obj 24 358 +~ 1e-15;
#X obj 23 607 *~;
#X obj 56 607 tabreceive~ \$0-hann;
#X obj 127 655 expr 2/(3*$f1);
#X msg 370 627 set \$1 4;
#X obj 98 440 q8_rsqrt~;
#N canvas 181 37 1029 784 read-windows 0;
#X obj 154 683 *~;
#X obj 200 99 /;
#X obj 272 683 *~;
#X obj 154 425 bang~;
#X obj 154 531 line~;
#X obj 200 124 * 1000;
#X obj 169 575 / 4;
#X floatatom 276 500 7 0 0 0 - - - 0;
#X obj 277 475 *;
#X obj 298 370 * 0.01;
#X obj 298 390 + 69;
#X obj 298 410 mtof;
#X obj 298 430 / 440;
#X obj 298 450 t b f;
#X obj 154 709 outlet~;
#X obj 272 709 outlet~;
#X obj 287 644 tabreceive~ \$0-hann;
#X text 335 497 stretched window size (samples), f 16;
#X floatatom 199 146 5 0 0 0 - - - 0;
#X obj 200 75 t f b;
#X obj 232 99 samplerate~;
#X obj 199 171 / 4;
#X text 337 52 Read two windows out of the recorded sample \, one 1/4
ahead of the other. The mid point of the front window is specified
by "location". If "speed" is nonzero \, "location" automatically precesses.
, f 45;
#X text 32 582 "back" window 1/4 cycle behind "front" one, f 16;
#X text 230 171 computation period (msec) for overlap of 4;
#X text 252 145 msec in a window;
#X obj 154 449 f;
#X msg 154 503 0 \, \$1 \$2;
#X obj 154 476 pack f f;
#X obj 59 289 inlet~;
#X obj 59 340 tabwrite~ \$0-input;
#X obj 69 318 bang~;
#X obj 59 259 array define \$0-input;
#X obj 59 240 array size \$0-input;
#X obj 154 623 tabread4~ \$0-input;
#X obj 272 623 tabread4~ \$0-input;
#X obj 154 596 -~;
#X obj 200 51 r \$0-window-size;
#X obj 277 323 r \$0-window-size;
#X obj 298 346 r \$0-transpo;
#X connect 0 0 14 0;
#X connect 1 0 5 0;
#X connect 2 0 15 0;
#X connect 3 0 26 0;
#X connect 4 0 36 0;
#X connect 4 0 35 0;
#X connect 5 0 18 0;
#X connect 6 0 36 1;
#X connect 7 0 6 0;
#X connect 7 0 26 1;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 8 0;
#X connect 13 1 8 1;
#X connect 16 0 2 1;
#X connect 16 0 0 1;
#X connect 18 0 21 0;
#X connect 19 0 1 0;
#X connect 19 1 20 0;
#X connect 20 0 1 1;
#X connect 21 0 28 1;
#X connect 26 0 28 0;
#X connect 27 0 4 0;
#X connect 28 0 27 0;
#X connect 29 0 30 0;
#X connect 31 0 30 0;
#X connect 34 0 0 0;
#X connect 35 0 2 0;
#X connect 36 0 34 0;
#X connect 37 0 19 0;
#X connect 37 0 33 0;
#X connect 38 0 8 0;
#X connect 39 0 9 0;
#X restore 152 147 pd read-windows;
#X text 277 14 recall previous output amplitude. Its phase will be
added to the phase difference we measure from two windows in the the
recorded sound.;
#X obj 126 78 *~;
#X obj 99 78 *~;
#X obj 99 100 +~;
#X obj 164 103 q8_rsqrt~;
#X obj 164 80 +~ 1e-20;
#X obj 83 128 *~;
#X obj 24 127 *~;
#X obj 34 254 lrshift~ 1;
#X obj 29 278 lrshift~ -1;
#X obj 146 254 lrshift~ 1;
#X obj 138 278 lrshift~ -1;
#X obj 42 309 *~;
#X obj 164 321 *~;
#X obj 24 334 +~;
#X obj 130 321 +~;
#X text 252 75 divide by the magnitude to make a unit-magnitude complex
amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~
is reciprocal square root.;
#X text 252 174 Take FT of the window in back. Multiply its conjugate
by the normalized previous output. The result has the magnitude of
the input sound and phase (previous output phase) minus (back window
phase).;
#X text 254 379 Normalize again \, this time taking care to salt each
channel with 1e-15 so that we get a unit complex number even if everything
was zero heretofore.;
#X text 287 435 Now take the FT of the forward window and multiply
it by the unit complex number from above. The magnitude will be that
of the forward window and the phase will be the previous output phase
plus the phase difference between the two analysis windows -- except
that if "lock" is on \, they will be modified to agree progressively
better with the inter-channel phase relationships of the input.;
#X text 254 251 If "lock" is on \, encourage neighboring channels to
stay in phase by adding the two neighboring complex amplitudes. The
result will tend toward the channel with the strongest amplitude. If
the phase relationships between channels in the output and those in
the input are in parallel \, then neighboring channels of the quotient
will all have the same phase and this will not change any phases. (lrshift
shifts the signal to the left or right depending on its argument.)
;
#X text 264 135 Read two windows \, one 1/4 length behind the other
\, of the input sound \, with Hann window function (see inside).;
#X text 341 566 'set' message to block allows variable size, f 22
;
#X obj 225 16 inlet~;
#X obj 370 603 r \$0-window-size;
#X obj 141 541 tabsend~ \$0-prev-imag;
#X obj 140 574 tabsend~ \$0-prev-real;
#X obj 127 633 r \$0-window-size;
#X obj 25 14 tabreceive~ \$0-prev-real;
#X obj 83 38 tabreceive~ \$0-prev-imag;
#X obj 182 299 r \$0-lock;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 56 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 55 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 39 0;
#X connect 10 0 38 0;
#X connect 10 0 44 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 24 0;
#X connect 17 0 18 0;
#X connect 18 0 28 0;
#X connect 19 0 40 0;
#X connect 19 0 41 0;
#X connect 19 0 45 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 23 0 17 1;
#X connect 23 0 17 0;
#X connect 23 0 20 0;
#X connect 24 0 12 0;
#X connect 25 0 24 1;
#X connect 26 0 12 1;
#X connect 27 0 22 0;
#X connect 28 0 20 1;
#X connect 28 0 21 1;
#X connect 29 0 14 0;
#X connect 29 1 13 0;
#X connect 31 0 33 1;
#X connect 32 0 33 0;
#X connect 33 0 35 0;
#X connect 34 0 36 1;
#X connect 34 0 37 1;
#X connect 35 0 34 0;
#X connect 36 0 8 0;
#X connect 36 0 7 0;
#X connect 37 0 9 0;
#X connect 37 0 6 0;
#X connect 38 0 42 0;
#X connect 39 0 42 0;
#X connect 40 0 43 0;
#X connect 41 0 43 0;
#X connect 42 0 44 1;
#X connect 43 0 45 1;
#X connect 44 0 23 0;
#X connect 45 0 11 0;
#X connect 45 0 11 1;
#X connect 45 0 21 0;
#X connect 53 0 29 0;
#X connect 54 0 27 0;
#X connect 57 0 26 0;
#X connect 58 0 32 1;
#X connect 58 0 32 0;
#X connect 58 0 37 0;
#X connect 59 0 31 1;
#X connect 59 0 31 0;
#X connect 59 0 36 0;
#X connect 60 0 42 1;
#X connect 60 0 43 1;
#X restore 51 84 pd fft-transpose;
#X obj 159 261 s \$0-transpo;
#X obj 51 62 inlet~;
#X obj 51 106 outlet~;
#X obj 159 62 inlet;
#X obj 159 84 route transpose windowsize lock;
#N canvas 625 421 461 367 pass-through-if-useful-power-of-2 0;
#X obj 95 74 t f f;
#X obj 122 95 sel 512 1024 2048 4096 8192;
#X msg 185 135 1;
#X obj 281 115 t b;
#X msg 281 135 0;
#X obj 95 243 spigot;
#X obj 95 52 inlet;
#X obj 95 289 outlet;
#X obj 230 169 t f f;
#X obj 153 243 spigot;
#X obj 95 150 t f b;
#X obj 257 189 == 0;
#X obj 153 183 f;
#X obj 168 51 inlet default-value;
#X connect 0 0 10 0;
#X connect 0 1 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 0;
#X connect 1 2 2 0;
#X connect 1 3 2 0;
#X connect 1 4 2 0;
#X connect 1 5 3 0;
#X connect 2 0 8 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 5 0 7 0;
#X connect 6 0 0 0;
#X connect 8 0 5 1;
#X connect 8 1 11 0;
#X connect 9 0 7 0;
#X connect 10 0 5 0;
#X connect 10 1 12 0;
#X connect 11 0 9 1;
#X connect 12 0 9 0;
#X connect 13 0 12 1;
#X restore 220 211 pd pass-through-if-useful-power-of-2;
#X obj 220 237 s \$0-window-size;
#X obj 406 142 loadbang;
#X msg 406 162 2048;
#X obj 406 182 t f f;
#X text 442 212 (ie from 512 to 8192 \, otherwise output default value)
;
#N canvas 770 408 358 283 pass-through-if-0-or-1 0;
#X obj 140 107 expr $f1 == 0 || $f1 == 1;
#X obj 69 191 spigot;
#X obj 140 128 t f f;
#X obj 113 191 spigot;
#X obj 167 147 == 0;
#X obj 69 55 t f f;
#X obj 69 127 t f b;
#X obj 113 157 f;
#X obj 69 21 inlet;
#X obj 128 21 inlet default-value;
#X obj 69 248 outlet;
#X connect 0 0 2 0;
#X connect 1 0 10 0;
#X connect 2 0 1 1;
#X connect 2 1 4 0;
#X connect 3 0 10 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 5 1 0 0;
#X connect 6 0 1 0;
#X connect 6 1 7 0;
#X connect 7 0 3 0;
#X connect 8 0 5 0;
#X connect 9 0 7 1;
#X restore 281 117 pd pass-through-if-0-or-1;
#X obj 281 140 s \$0-lock;
#X obj 401 52 loadbang;
#X obj 401 92 t f f;
#X msg 401 72 1;
#X text 431 73 < default lock value;
#X text 440 162 < default window size;
#X text 437 118 (otherwise output default value);
#X text 496 298 I07.phase.vocoder.pd;
#X text 210 298 adapted from Pd's documentation audio example :;
#X connect 2 0 5 0;
#X connect 4 0 2 0;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X connect 7 1 8 0;
#X connect 7 2 14 0;
#X connect 8 0 9 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 12 1 8 1;
#X connect 14 0 15 0;
#X connect 16 0 18 0;
#X connect 17 0 15 0;
#X connect 17 1 14 1;
#X connect 18 0 17 0;
